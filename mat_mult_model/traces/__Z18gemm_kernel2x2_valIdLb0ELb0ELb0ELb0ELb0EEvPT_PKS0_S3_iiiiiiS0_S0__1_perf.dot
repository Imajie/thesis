/*
     kernel:  kernel-name 
*/
digraph {
  // basic blocks

  bb_0 [shape=record,style="bold,filled",fillcolor="#4444cc",label="{ KERNEL: _Z18gemm_kernel2x2_valIdLb0ELb0ELb0ELb0ELb0EEvPT_PKS0_S3_iiiiiiS0_S0_ | memory demand: 0 bytes  | warp instr: 49  | dynamic instr: 3,136  | FLOPs: 0  | avg stack depth: 1 }"];
  bb_1 [shape=Msquare,label="BB_29_1"];
  bb_4 [fillcolor="#b52d2d",style=filled,shape=record,label="{BB_29_2 | memory demand: 0 bytes  | warp instr: 1,127  | dynamic instr: 72,128  | FLOPs: 0  | avg stack depth: 1.04348 }"];
  bb_5 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_3 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_6 [fillcolor="#822020",style=filled,shape=record,label="{BB_29_4 | memory demand: 0 bytes  | warp instr: 49  | dynamic instr: 3,136  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_7 [fillcolor="#a92a2a",style=filled,shape=record,label="{BB_29_5 | memory demand: 0 bytes  | warp instr: 539  | dynamic instr: 34,048  | FLOPs: 0  | avg stack depth: 1.09091 }"];
  bb_8 [fillcolor="#6e1b1b",style=filled,shape=record,label="{BB_29_6 | memory demand: 0 bytes  | warp instr: 14  | dynamic instr: 896  | FLOPs: 0  | avg stack depth: 2 }",fontcolor="#aaaaaa"];
  bb_9 [fillcolor="#802020",style=filled,shape=record,label="{BB_29_7 | memory demand: 0 bytes  | warp instr: 42  | dynamic instr: 2,688  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_10 [fillcolor="#a92a2a",style=filled,shape=record,label="{BB_29_8 | memory demand: 0 bytes  | warp instr: 539  | dynamic instr: 34,048  | FLOPs: 0  | avg stack depth: 1.09091 }"];
  bb_11 [fillcolor="#6e1b1b",style=filled,shape=record,label="{BB_29_9 | memory demand: 0 bytes  | warp instr: 14  | dynamic instr: 896  | FLOPs: 0  | avg stack depth: 2 }",fontcolor="#aaaaaa"];
  bb_12 [fillcolor="#802020",style=filled,shape=record,label="{BB_29_10 | memory demand: 0 bytes  | warp instr: 42  | dynamic instr: 2,688  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_13 [fillcolor="#a82a2a",style=filled,shape=record,label="{BB_29_11 | memory demand: 0 bytes  | warp instr: 490  | dynamic instr: 30,912  | FLOPs: 0  | avg stack depth: 1.1 }"];
  bb_14 [fillcolor="#6e1b1b",style=filled,shape=record,label="{BB_29_12 | memory demand: 0 bytes  | warp instr: 14  | dynamic instr: 896  | FLOPs: 0  | avg stack depth: 2 }",fontcolor="#aaaaaa"];
  bb_15 [fillcolor="#802020",style=filled,shape=record,label="{BB_29_13 | memory demand: 0 bytes  | warp instr: 42  | dynamic instr: 2,688  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_16 [fillcolor="#b42d2d",style=filled,shape=record,label="{BB_29_14 | memory demand: 0 bytes  | warp instr: 1,029  | dynamic instr: 65,520  | FLOPs: 0  | avg stack depth: 1.05442 }"];
  bb_17 [fillcolor="#691a1a",style=filled,shape=record,label="{BB_29_15 | memory demand: 0 bytes  | warp instr: 14  | dynamic instr: 672  | FLOPs: 0  | avg stack depth: 3 }",fontcolor="#aaaaaa"];
  bb_18 [fillcolor="#812020",style=filled,shape=record,label="{BB_29_16 | memory demand: 0 bytes  | warp instr: 49  | dynamic instr: 2,800  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_19 [fillcolor="#ab2a2a",style=filled,shape=record,label="{BB_29_17 | memory demand: 0 bytes  | warp instr: 588  | dynamic instr: 37,296  | FLOPs: 0  | avg stack depth: 1.09524 }"];
  bb_20 [fillcolor="#691a1a",style=filled,shape=record,label="{BB_29_18 | memory demand: 0 bytes  | warp instr: 14  | dynamic instr: 672  | FLOPs: 0  | avg stack depth: 3 }",fontcolor="#aaaaaa"];
  bb_21 [fillcolor="#812020",style=filled,shape=record,label="{BB_29_19 | memory demand: 0 bytes  | warp instr: 49  | dynamic instr: 2,800  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_22 [fillcolor="#ab2a2a",style=filled,shape=record,label="{BB_29_20 | memory demand: 0 bytes  | warp instr: 588  | dynamic instr: 37,296  | FLOPs: 0  | avg stack depth: 1.09524 }"];
  bb_23 [fillcolor="#691a1a",style=filled,shape=record,label="{BB_29_21 | memory demand: 0 bytes  | warp instr: 14  | dynamic instr: 672  | FLOPs: 0  | avg stack depth: 3 }",fontcolor="#aaaaaa"];
  bb_24 [fillcolor="#812020",style=filled,shape=record,label="{BB_29_22 | memory demand: 0 bytes  | warp instr: 49  | dynamic instr: 2,800  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_25 [fillcolor="#a92a2a",style=filled,shape=record,label="{BB_29_23 | memory demand: 0 bytes  | warp instr: 539  | dynamic instr: 34,160  | FLOPs: 0  | avg stack depth: 1.1039 }"];
  bb_26 [fillcolor="#691a1a",style=filled,shape=record,label="{BB_29_24 | memory demand: 0 bytes  | warp instr: 14  | dynamic instr: 672  | FLOPs: 0  | avg stack depth: 3 }",fontcolor="#aaaaaa"];
  bb_27 [fillcolor="#812020",style=filled,shape=record,label="{BB_29_25 | memory demand: 0 bytes  | warp instr: 49  | dynamic instr: 2,800  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_28 [fillcolor="#a02828",style=filled,shape=record,label="{BB_29_26 | memory demand: 0 bytes  | warp instr: 294  | dynamic instr: 18,816  | FLOPs: 0  | avg stack depth: 1.16667 }"];
  bb_29 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_27 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_30 [fillcolor="#a22828",style=filled,shape=record,label="{BB_29_28 | memory demand: 0 bytes  | warp instr: 343  | dynamic instr: 21,952  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_31 [fillcolor="#f23c3c",style=filled,shape=record,label="{BB_29_29 | memory demand: 0 bytes  | warp instr: 46,452  | dynamic instr: 2,970,912  | FLOPs: 1,204,224  | avg stack depth: 2.00723 }"];
  bb_32 [fillcolor="#872121",style=filled,shape=record,label="{BB_29_30 | memory demand: 0 bytes  | warp instr: 84  | dynamic instr: 4,032  | FLOPs: 0  | avg stack depth: 4 }"];
  bb_33 [fillcolor="#9e2727",style=filled,shape=record,label="{BB_29_31 | memory demand: 0 bytes  | warp instr: 294  | dynamic instr: 16,800  | FLOPs: 0  | avg stack depth: 3 }"];
  bb_34 [fillcolor="#cf3434",style=filled,shape=record,label="{BB_29_32 | memory demand: 0 bytes  | warp instr: 5,586  | dynamic instr: 352,688  | FLOPs: 0  | avg stack depth: 2.0589 }"];
  bb_35 [fillcolor="#952525",style=filled,shape=record,label="{BB_29_33 | memory demand: 0 bytes  | warp instr: 168  | dynamic instr: 9,632  | FLOPs: 0  | avg stack depth: 3.41667 }"];
  bb_36 [fillcolor="#9b2626",style=filled,shape=record,label="{BB_29_34 | memory demand: 0 bytes  | warp instr: 245  | dynamic instr: 14,000  | FLOPs: 0  | avg stack depth: 3 }"];
  bb_37 [fillcolor="#cb3333",style=filled,shape=record,label="{BB_29_35 | memory demand: 0 bytes  | warp instr: 4,410  | dynamic instr: 277,424  | FLOPs: 0  | avg stack depth: 2.0746 }"];
  bb_38 [fillcolor="#952525",style=filled,shape=record,label="{BB_29_36 | memory demand: 0 bytes  | warp instr: 168  | dynamic instr: 9,632  | FLOPs: 0  | avg stack depth: 3.41667 }"];
  bb_39 [fillcolor="#9b2626",style=filled,shape=record,label="{BB_29_37 | memory demand: 0 bytes  | warp instr: 245  | dynamic instr: 14,000  | FLOPs: 0  | avg stack depth: 3 }"];
  bb_40 [fillcolor="#ca3232",style=filled,shape=record,label="{BB_29_38 | memory demand: 0 bytes  | warp instr: 4,116  | dynamic instr: 258,608  | FLOPs: 0  | avg stack depth: 2.07993 }"];
  bb_41 [fillcolor="#952525",style=filled,shape=record,label="{BB_29_39 | memory demand: 0 bytes  | warp instr: 168  | dynamic instr: 9,632  | FLOPs: 0  | avg stack depth: 3.41667 }"];
  bb_42 [fillcolor="#9b2626",style=filled,shape=record,label="{BB_29_40 | memory demand: 0 bytes  | warp instr: 245  | dynamic instr: 14,000  | FLOPs: 0  | avg stack depth: 3 }"];
  bb_43 [fillcolor="#d03434",style=filled,shape=record,label="{BB_29_41 | memory demand: 0 bytes  | warp instr: 5,880  | dynamic instr: 373,968  | FLOPs: 0  | avg stack depth: 2.05833 }"];
  bb_44 [fillcolor="#892222",style=filled,shape=record,label="{BB_29_42 | memory demand: 0 bytes  | warp instr: 98  | dynamic instr: 4,704  | FLOPs: 0  | avg stack depth: 4 }"];
  bb_45 [fillcolor="#9d2727",style=filled,shape=record,label="{BB_29_43 | memory demand: 0 bytes  | warp instr: 294  | dynamic instr: 16,464  | FLOPs: 0  | avg stack depth: 3 }"];
  bb_46 [fillcolor="#d13434",style=filled,shape=record,label="{BB_29_44 | memory demand: 0 bytes  | warp instr: 6,174  | dynamic instr: 390,432  | FLOPs: 0  | avg stack depth: 2.05442 }"];
  bb_47 [fillcolor="#942525",style=filled,shape=record,label="{BB_29_45 | memory demand: 0 bytes  | warp instr: 168  | dynamic instr: 9,408  | FLOPs: 0  | avg stack depth: 3.5 }"];
  bb_48 [fillcolor="#9b2626",style=filled,shape=record,label="{BB_29_46 | memory demand: 0 bytes  | warp instr: 252  | dynamic instr: 14,112  | FLOPs: 0  | avg stack depth: 3 }"];
  bb_49 [fillcolor="#cf3434",style=filled,shape=record,label="{BB_29_47 | memory demand: 0 bytes  | warp instr: 5,586  | dynamic instr: 352,800  | FLOPs: 0  | avg stack depth: 2.06015 }"];
  bb_50 [fillcolor="#942525",style=filled,shape=record,label="{BB_29_48 | memory demand: 0 bytes  | warp instr: 168  | dynamic instr: 9,408  | FLOPs: 0  | avg stack depth: 3.5 }"];
  bb_51 [fillcolor="#9b2626",style=filled,shape=record,label="{BB_29_49 | memory demand: 0 bytes  | warp instr: 252  | dynamic instr: 14,112  | FLOPs: 0  | avg stack depth: 3 }"];
  bb_52 [fillcolor="#ce3333",style=filled,shape=record,label="{BB_29_50 | memory demand: 0 bytes  | warp instr: 5,292  | dynamic instr: 333,984  | FLOPs: 0  | avg stack depth: 2.06349 }"];
  bb_53 [fillcolor="#942525",style=filled,shape=record,label="{BB_29_51 | memory demand: 0 bytes  | warp instr: 168  | dynamic instr: 9,408  | FLOPs: 0  | avg stack depth: 3.5 }"];
  bb_54 [fillcolor="#9b2626",style=filled,shape=record,label="{BB_29_52 | memory demand: 0 bytes  | warp instr: 252  | dynamic instr: 14,112  | FLOPs: 0  | avg stack depth: 3 }"];
  bb_55 [fillcolor="#c33131",style=filled,shape=record,label="{BB_29_53 | memory demand: 0 bytes  | warp instr: 2,646  | dynamic instr: 166,208  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_56 [fillcolor="#992626",style=filled,shape=record,label="{BB_29_54 | memory demand: 0 bytes  | warp instr: 196  | dynamic instr: 12,544  | FLOPs: 0  | avg stack depth: 1.25 }"];
  bb_57 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_55 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_58 [fillcolor="#ab2b2b",style=filled,shape=record,label="{BB_29_56 | memory demand: 0 bytes  | warp instr: 588  | dynamic instr: 37,632  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_59 [fillcolor="#c23030",style=filled,shape=record,label="{BB_29_57 | memory demand: 0 bytes  | warp instr: 2,548  | dynamic instr: 159,936  | FLOPs: 50,176  | avg stack depth: 2 }"];
  bb_60 [fillcolor="#b72e2e",style=filled,shape=record,label="{BB_29_58 | memory demand: 0 bytes  | warp instr: 1,323  | dynamic instr: 81,536  | FLOPs: 0  | avg stack depth: 1.03704 }"];
  bb_61 [fillcolor="#621818",style=filled,shape=record,label="{BB_29_59 | memory demand: 0 bytes  | warp instr: 49  | dynamic instr: 432  | FLOPs: 0  | avg stack depth: 3.26531 }",fontcolor="#aaaaaa"];
  bb_62 [fillcolor="#922424",style=filled,shape=record,label="{BB_29_60 | memory demand: 0 bytes  | warp instr: 147  | dynamic instr: 8,112  | FLOPs: 2,704  | avg stack depth: 3.26531 }"];
  bb_63 [fillcolor="#9d2727",style=filled,shape=record,label="{BB_29_61 | memory demand: 0 bytes  | warp instr: 294  | dynamic instr: 16,320  | FLOPs: 0  | avg stack depth: 2.18707 }"];
  bb_64 [fillcolor="#912424",style=filled,shape=record,label="{BB_29_62 | memory demand: 0 bytes  | warp instr: 126  | dynamic instr: 7,488  | FLOPs: 2,496  | avg stack depth: 3.14286 }"];
  bb_65 [fillcolor="#a32828",style=filled,shape=record,label="{BB_29_63 | memory demand: 0 bytes  | warp instr: 392  | dynamic instr: 22,592  | FLOPs: 0  | avg stack depth: 2.14031 }"];
  bb_66 [fillcolor="#912424",style=filled,shape=record,label="{BB_29_64 | memory demand: 0 bytes  | warp instr: 126  | dynamic instr: 7,488  | FLOPs: 2,496  | avg stack depth: 3.14286 }"];
  bb_67 [fillcolor="#9a2626",style=filled,shape=record,label="{BB_29_65 | memory demand: 0 bytes  | warp instr: 245  | dynamic instr: 13,376  | FLOPs: 0  | avg stack depth: 2 }"];
  bb_68 [fillcolor="#982626",style=filled,shape=record,label="{BB_29_66 | memory demand: 0 bytes  | warp instr: 180  | dynamic instr: 11,520  | FLOPs: 2,304  | avg stack depth: 2 }"];
  bb_69 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_67 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_70 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_68 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_71 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_69 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_72 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_70 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_73 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_71 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_74 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_72 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_75 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_73 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_76 [fillcolor="#000000",style=filled,shape=record,label="{BB_29_74 | memory demand: 0 bytes  | warp instr: 0  | dynamic instr: 0  | FLOPs: 0 }",fontcolor="#aaaaaa"];
  bb_77 [fillcolor="#781e1e",style=filled,shape=record,label="{BB_29_75 | memory demand: 0 bytes  | warp instr: 26  | dynamic instr: 1,664  | FLOPs: 0  | avg stack depth: 2 }",fontcolor="#aaaaaa"];


  // edges

  bb_0 -> bb_4 ;
  bb_4 -> bb_5 ;
  bb_6 -> bb_7 ;
  bb_7 -> bb_8 ;
  bb_9 -> bb_10 ;
  bb_10 -> bb_11 ;
  bb_12 -> bb_13 ;
  bb_13 -> bb_14 ;
  bb_15 -> bb_16 ;
  bb_16 -> bb_17 ;
  bb_18 -> bb_19 ;
  bb_19 -> bb_20 ;
  bb_21 -> bb_22 ;
  bb_22 -> bb_23 ;
  bb_24 -> bb_25 ;
  bb_25 -> bb_26 ;
  bb_27 -> bb_28 ;
  bb_28 -> bb_29 ;
  bb_30 -> bb_31 ;
  bb_31 -> bb_32 ;
  bb_33 -> bb_34 ;
  bb_34 -> bb_35 ;
  bb_36 -> bb_37 ;
  bb_37 -> bb_38 ;
  bb_39 -> bb_40 ;
  bb_40 -> bb_41 ;
  bb_42 -> bb_43 ;
  bb_43 -> bb_44 ;
  bb_45 -> bb_46 ;
  bb_46 -> bb_47 ;
  bb_48 -> bb_49 ;
  bb_49 -> bb_50 ;
  bb_51 -> bb_52 ;
  bb_52 -> bb_53 ;
  bb_54 -> bb_55 ;
  bb_55 -> bb_56 ;
  bb_56 -> bb_57 ;
  bb_58 -> bb_59 ;
  bb_59 -> bb_60 ;
  bb_60 -> bb_61 ;
  bb_61 -> bb_62 ;
  bb_62 -> bb_63 ;
  bb_63 -> bb_64 ;
  bb_64 -> bb_65 ;
  bb_65 -> bb_66 ;
  bb_66 -> bb_67 ;
  bb_67 -> bb_68 ;
  bb_68 -> bb_1 ;
  bb_69 -> bb_70 ;
  bb_70 -> bb_71 ;
  bb_71 -> bb_72 ;
  bb_72 -> bb_73 ;
  bb_73 -> bb_74 ;
  bb_74 -> bb_75 ;
  bb_75 -> bb_76 ;
  bb_76 -> bb_77 ;
  bb_77 -> bb_1 [color=blue];
  bb_4 -> bb_6 [color=blue];
  bb_5 -> bb_7 [color=blue];
  bb_7 -> bb_9 [color=blue];
  bb_8 -> bb_10 [color=blue];
  bb_10 -> bb_12 [color=blue];
  bb_11 -> bb_13 [color=blue];
  bb_13 -> bb_15 [color=blue];
  bb_14 -> bb_16 [color=blue];
  bb_16 -> bb_18 [color=blue];
  bb_17 -> bb_19 [color=blue];
  bb_19 -> bb_21 [color=blue];
  bb_20 -> bb_22 [color=blue];
  bb_22 -> bb_24 [color=blue];
  bb_23 -> bb_25 [color=blue];
  bb_25 -> bb_27 [color=blue];
  bb_26 -> bb_28 [color=blue];
  bb_28 -> bb_30 [color=blue];
  bb_29 -> bb_56 [color=blue];
  bb_31 -> bb_33 [color=blue];
  bb_32 -> bb_34 [color=blue];
  bb_34 -> bb_36 [color=blue];
  bb_35 -> bb_37 [color=blue];
  bb_37 -> bb_39 [color=blue];
  bb_38 -> bb_40 [color=blue];
  bb_40 -> bb_42 [color=blue];
  bb_41 -> bb_43 [color=blue];
  bb_43 -> bb_45 [color=blue];
  bb_44 -> bb_46 [color=blue];
  bb_46 -> bb_48 [color=blue];
  bb_47 -> bb_49 [color=blue];
  bb_49 -> bb_51 [color=blue];
  bb_50 -> bb_52 [color=blue];
  bb_52 -> bb_54 [color=blue];
  bb_53 -> bb_55 [color=blue];
  bb_55 -> bb_31 [color=blue];
  bb_56 -> bb_58 [color=blue];
  bb_57 -> bb_60 [color=blue];
  bb_59 -> bb_59 [color=blue];
  bb_60 -> bb_69 [color=blue];
  bb_61 -> bb_63 [color=blue];
  bb_63 -> bb_65 [color=blue];
  bb_65 -> bb_67 [color=blue];
  bb_67 -> bb_77 [color=blue];
  bb_69 -> bb_71 [color=blue];
  bb_71 -> bb_73 [color=blue];
  bb_73 -> bb_75 [color=blue];
  bb_75 -> bb_77 [color=blue];
}
